version: "3"

services:
    db:
        image: mysql:8.0.33
        platform: linux/x86_64
        command: --default-authentication-plugin=mysql_native_password
        volumes:
            - "db_app:/var/lib/mysql"
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        ports:
            - 3306:3306
        networks:
            - symfony_app
    php:
        build:
            context: ./php
            args:
                TIMEZONE: ${TIMEZONE}
        volumes:
            - ../:/var/www/symfony:cached
            - symfony_app_var:/var/www/symfony/var
            - symfony_app_vendor:/var/www/symfony/vendor
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        networks:
            - symfony_app
    nginx:
        build:
            context: ./nginx
        volumes:
            - ../:/var/www/symfony:cached
            - symfony_app_var:/var/www/symfony/var
            - symfony_app_vendor:/var/www/symfony/vendor
        ports:
            - 80:80
        networks:
            - symfony_app
        env_file:
            - .env.nginx.local
    node:
        build:
            context: .
            dockerfile: ./node/Dockerfile
        restart: unless-stopped
        ports:
            - "5173:5173"
        volumes:
            - ../assets/:/srv/app
        stdin_open: true
        tty: true
    web:
        image: nginx:latest # Usa la imagen oficial de Nginx
        ports:
            - "9894:80" # Mapea el puerto 80 del contenedor al puerto 80 local
        volumes:
            - ../assets/dist:/usr/share/nginx/html # Conecta el directorio local /dist al directorio de contenido de Nginx
            - ./web/nginx.conf:/etc/nginx/conf.d/default.conf
        restart: unless-stopped
        depends_on:
            - node

volumes:
    symfony_app_var:
    symfony_app_vendor:
    db_app:

networks:
    symfony_app:
